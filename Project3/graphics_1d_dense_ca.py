from p5 import *
from dense_1d_ca import CaOneDDense
import ca_inputs

def setup():
    size(CaOneDDense._input_len*4,CaOneDDense._iter_size*4)
    no_stroke()



def draw():
    # print(CaOneDDense._init_cond_len)
    for i in range(0,CaOneDDense._input_len):
        if ca.input[i]=='0':
            fill(0)
        else:
            fill(255)
        square((i*4,ca.current_iter*4),4)

    ca.iterate_once()
    if ca.current_iter >= ca._iter_size:
        no_loop()

testrule = {'fitness': 134, 0: '0', 1: '0', 2: '0', 3: '0', 4: '0', 5: '0', 6: '0', 7: '0', 8: '0', 9: '0', 10: '0', 11: '0', 12: '0', 13: '1', 14: '0', 15: '0', 16: '1', 17: '0', 18: '0', 19: '1', 20: '0', 21: '0', 22: '0', 23: '1', 24: '1', 25: '1', 26: '0', 27: '0', 28: '1', 29: '1', 30: '1', 31: '1', 32: '0', 33: '0', 34: '1', 35: '0', 36: '1', 37: '1', 38: '0', 39: '1', 40: '0', 41: '1', 42: '0', 43: '0', 44: '1', 45: '0', 46: '0', 47: '1', 48: '1', 49: '0', 50: '0', 51: '0', 52: '0', 53: '1', 54: '0', 55: '1', 56: '0', 57: '0', 58: '0', 59: '1', 60: '1', 61: '1', 62: '1', 63: '1', 64: '0', 65: '0', 66: '1', 67: '0', 68: '0', 69: '0', 70: '1', 71: '0', 72: '0', 73: '0', 74: '1', 75: '0', 76: '0', 77: '1', 78: '0', 79: '0', 80: '0', 81: '0', 82: '0', 83: '1', 84: '0', 85: '1', 86: '0', 87: '1', 88: '0', 89: '0', 90: '1', 91: '1', 92: '0', 93: '0', 94: '0', 95: '0', 96: '1', 97: '1', 98: '0', 99: '1', 100: '0', 101: '0', 102: '0', 103: '1', 104: '0', 105: '1', 106: '0', 107: '1', 108: '0', 109: '0', 110: '0', 111: '1', 112: '1', 113: '1', 114: '1', 115: '1', 116: '1', 117: '1', 118: '0', 119: '1', 120: '1', 121: '1', 122: '0', 123: '1', 124: '1', 125: '1', 126: '1', 127: '1'}



ca = CaOneDDense(rules= testrule, input=ca_inputs.dense_1_75[72])
# ca.iterate_all()
#run()
print(ca_inputs.dense_1_75[72].count('1'))
print(ca_inputs.dense_1_75[72].count('0'))